package modele;
import java.util.*;
import controleur.*;
import vue.*;

/**
 * Classe représentant un joueur
 */

public class Joueur {

	/**
	 * attribut privé de type chaîne de caractère qui définit le nom du joueur
	 */
	private String pseudo;
	/**
	 * attribut privé de type Jest représentant le jest d'un joueur {@link Jest}
	 */
	private Jest jest;
	/**
	 * attribut privé de type Offre représentant la main d'un joueur {@link Main}
	 */
	private Offre main;
	/**
	 * attribut privé de type booléen qui définit si le joueur peut jouer
	 */
	private boolean estJouable;
	/**
	 * attribut privé statique de type entier représentant le nombre de joueurs
	 * dans la partie
	 */
	private static int nbJoueurs = 0;// va être utile pour pouvoir creer le tas à partir de la pioche
	/**
	 * attribut privé de type entier qui définit le score du joueur
	 */
	private int score;
	
	/**
	 * constructeur de la classe Joueur avec comme paramètre la partie {@link Partie}
	 * @param partie la partie dans laquelle va jouer le joueur
	 */
	public Joueur(Partie partie) {
		pseudo = null;
		this.jest = new Jest(this);
		this.main = new Offre();
		this.estJouable = true;
		partie.addJoueur(this);
		Joueur.nbJoueurs++;
		this.score = 0;
	}

	/**
	 * constructeur de la classe Joueur sans paramètre d'entrée
	 */
	public Joueur() {
		pseudo = null;
		this.jest = new Jest(this);
		this.main = new Offre();
		this.score = 0;
	}

	/**
	* méthode qui fait piocher le joueur dans le tas de la partie {@link Tas}
	 * @param a le tas dans lequel pioche le joueur
	 */
	public void piocherDansTas(Tas a) {// prend carte du haut du tas, attribue à la carte sa place dans la main
		Carte c = a.retirerCarteDuHaut();
		this.main.getOffre().add(c);
	}

	/**
	 * méthode qui fait piocher le joueur dans la pioche de la partie {@link Pioche}
	 * @param p la pioche dans laquelle pioche le joueur
	 */
	public void piocherDansPioche(Pioche p) {// prend carte du haut de la pioche, attribue à la carte sa place dans la
												// main
		Carte c = p.retirerCarteDuHaut();
		this.main.getOffre().add(c);
	}

	public void faireOffre(boolean premiereCarte) {// rend une des cartes visible aux autres joueurs
		if (premiereCarte == true) {
			this.main.getOffre().get(0).setVisibilite(true);
		} else {
			this.main.getOffre().get(1).setVisibilite(true);
		}
	}

	public Carte piocherOffre(Joueur a, boolean carteVisible) {// enlève la carte choisie de la main et la met dans le
																// jest
		Carte cartePiochee = null;
		if (a.main.getPiochabilite() == true) {
			if ((carteVisible == true && a.main.getOffre().get(0).getVisibilite() == true)
					|| (carteVisible == false && a.main.getOffre().get(0).getVisibilite() == false)) {
				this.jest.getCartes().add(a.main.getOffre().get(0));
				cartePiochee = a.getMain().getOffre().get(0);
				a.main.getOffre().remove(0);
			} else {
				this.jest.getCartes().add(a.main.getOffre().get(1));
				cartePiochee = a.getMain().getOffre().get(1);
				a.main.getOffre().remove(1);
			}
			a.main.setPiochabilite(false);
		}
		this.estJouable = false;
		return cartePiochee;
	}

	public void consulterOffre(Joueur a) {// affiche l'offre d'un joueur, les cartes non visibles sont affichés face
											// cachée
		for(Carte c : a.main.getOffre()) {
			if(c.getVisibilite()==true) {
				System.out.println(c);
			}
			else {System.out.println("Carte face cachée");}
			
		}
	}
	
	public void faireOffre(StrategieA methode) {
		methode.faireOffre(this);
	}
	
	public void piocherOffre(StrategieA methode, Joueur joueurPioche) {
		methode.piocherOffre(this, joueurPioche);
	}
	
	public Joueur choisirJoueurAPiocher(StrategieA methode, ArrayList<Joueur> joueurs) {
		return methode.choisirJoueurAPiocher(joueurs,this); 
	}

	public void consulterMain() {
		this.main.afficherOffre();

	}

	public void consulterJest() {
		this.jest.afficherJest();

	}

	public static int getNbJoueurs() {
		return Joueur.nbJoueurs;
	}

	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append(this.pseudo);
		return sb.toString();

	}


	public Jest getJest() {
		return this.jest;
	}

	public String getPseudo() {
		return this.pseudo;
	}

	public void setPseudo(String nom) {
		this.pseudo = nom;
	}

	public void setMain(Offre o) {
		this.main = o;
	}

	public void setJest(Jest j) {
		this.jest = j;
	}

	public Offre getMain() {
		return this.main;
	}

	public boolean getJouabilite() {
		return this.estJouable;
	}
	public void setJouabilite(boolean b) {
		this.estJouable=b;
	}
	
	public int getScore(){
		return this.score;
	}
	
	public void setScore(int score){
		this.score = score;
	}

}
